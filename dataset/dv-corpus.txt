licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils import java sql resultset import java sql resultsetmetadata import java sql sqlexception import java util hashmap import java util list import java util map basic implementation of the rowprocessor interface this class is thread safe rowprocessor public class basicrowprocessor implements rowprocessor the default beanprocessor instance to use if not supplied in the constructor private static final beanprocessor defaultconvert new beanprocessor the singleton instance of this class private static final basicrowprocessor instance new basicrowprocessor returns the singleton instance of this class the single instance of this class create instances with the constructors instead this will be removed after dbutils public static basicrowprocessor instance return instance use this to process beans private final beanprocessor convert basicrowprocessor constructor bean processing defaults to a beanprocessor instance public basicrowprocessor this defaultconvert basicrowprocessor constructor convert the beanprocessor to use when converting columns to bean properties dbutils public basicrowprocessor beanprocessor convert super this convert convert convert a resultset row into an object this implementation copies column values into the array in the same order theyre returned from the resultset array elements will be set to null if the column was sql null org apache commons dbutils rowprocessor toarray java sql resultset rs resultset that supplies the array data sqlexception if a database access error occurs the newly created array public object toarray resultset rs throws sqlexception resultsetmetadata meta rs getmetadata int cols meta getcolumncount object result new object cols for int i i cols i result i rs getobject i return result convert a resultset row into a javabean this implementation delegates to a beanprocessor instance org apache commons dbutils rowprocessor tobean java sql resultset java lang class org apache commons dbutils beanprocessor tobean java sql resultset java lang class the type of bean to create rs resultset that supplies the bean data type class from which to create the bean instance sqlexception if a database access error occurs the newly created bean public t tobean resultset rs class type throws sqlexception return this convert tobean rs type convert a resultset into a list of javabeans this implementation delegates to a beanprocessor instance org apache commons dbutils rowprocessor tobeanlist java sql resultset java lang class org apache commons dbutils beanprocessor tobeanlist java sql resultset java lang class the type of bean to create rs resultset that supplies the bean data type class from which to create the bean instance sqlexception if a database access error occurs a list of beans with the given type in the order they were returned by the resultset public list tobeanlist resultset rs class type throws sqlexception return this convert tobeanlist rs type convert a resultset row into a map this implementation returns a map with case insensitive column names as keys calls to map get col and map get col return the same value org apache commons dbutils rowprocessor tomap java sql resultset rs resultset that supplies the map data sqlexception if a database access error occurs the newly created map public map string object tomap resultset rs throws sqlexception map string object result new caseinsensitivehashmap resultsetmetadata rsmd rs getmetadata int cols rsmd getcolumncount for int i i cols i result put rsmd getcolumnname i rs getobject i return result a map that converts all keys to lowercase strings for case insensitive lookups this is needed for the tomap implementation because databases dont consistenly handle the casing of column names the keys are stored as they are given bug dbutils so we maintain an internal mapping from lowercase keys to the real keys in order to achieve the case insensitive lookup note this implementation does not allow null for key whereas hashmap does because of the code key tostring tolowercase private static class caseinsensitivehashmap extends hashmap string object the internal mapping from lowercase keys to the real keys any query operation using the key get object containskey object is done in three steps convert the parameter key to lower case get the actual key that corresponds to the lower case key query the map with the actual key private final map string string lowercasemap new hashmap string string required for serialization support java io serializable private static final long serialversionuid l public boolean containskey object key object realkey lowercasemap get key tostring tolowercase return super containskey realkey possible optimisation here since the lowercasemap contains a mapping for all the keys we could just do this return lowercasemap containskey key tostring tolowercase public object get object key object realkey lowercasemap get key tostring tolowercase return super get realkey public object put string key object value in order to keep the map and lowercasemap synchronized we have to remove the old mapping before putting the new one indeed oldkey and key are not necessaliry equals thats why we call super remove oldkey and not just super put key value object oldkey lowercasemap put key tolowercase key object oldvalue super remove oldkey super put key value return oldvalue public void putall map extends string m for map entry extends string entry m entryset string key entry getkey object value entry getvalue this put key value public object remove object key object realkey lowercasemap remove key tostring tolowercase return super remove realkey
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils import java beans beaninfo import java beans introspectionexception import java beans introspector import java beans propertydescriptor import java lang reflect invocationtargetexception import java lang reflect method import java sql resultset import java sql resultsetmetadata import java sql sqlexception import java sql timestamp import java util arraylist import java util arrays import java util hashmap import java util list import java util map beanprocessor matches column names to bean property names and converts resultset columns into objects for those bean properties subclasses should override the methods in the processing chain to customize behavior this class is thread safe basicrowprocessor dbutils public class beanprocessor special array value used by mapcolumnstoproperties that indicates there is no bean property that matches a column from a resultset protected static final int property_not_found set a beans primitive properties to these defaults when sql null is returned these are the same as the defaults that resultset get methods return in the event of a null column private static final map class object primitivedefaults new hashmap class object static primitivedefaults put integer type primitivedefaults put short type short short primitivedefaults put byte type byte byte primitivedefaults put float type float float primitivedefaults put double type double double primitivedefaults put long type long l primitivedefaults put boolean type boolean false primitivedefaults put character type u constructor for beanprocessor public beanprocessor super convert a resultset row into a javabean this implementation uses reflection and beaninfo classes to match column names to bean property names properties are matched to columns based on several factors the class has a writable property with the same name as a column the name comparison is case insensitive the column type can be converted to the propertys set method parameter type with a resultset get method if the conversion fails ie the property was an int and the column was a timestamp an sqlexception is thrown primitive bean properties are set to their defaults when sql null is returned from the resultset numeric fields are set to and booleans are set to false object bean properties are set to null when sql null is returned this is the same behavior as the resultset get methods the type of bean to create rs resultset that supplies the bean data type class from which to create the bean instance sqlexception if a database access error occurs the newly created bean public t tobean resultset rs class type throws sqlexception propertydescriptor props this propertydescriptors type resultsetmetadata rsmd rs getmetadata int columntoproperty this mapcolumnstoproperties rsmd props return this createbean rs type props columntoproperty convert a resultset into a list of javabeans this implementation uses reflection and beaninfo classes to match column names to bean property names properties are matched to columns based on several factors the class has a writable property with the same name as a column the name comparison is case insensitive the column type can be converted to the propertys set method parameter type with a resultset get method if the conversion fails ie the property was an int and the column was a timestamp an sqlexception is thrown primitive bean properties are set to their defaults when sql null is returned from the resultset numeric fields are set to and booleans are set to false object bean properties are set to null when sql null is returned this is the same behavior as the resultset get methods the type of bean to create rs resultset that supplies the bean data type class from which to create the bean instance sqlexception if a database access error occurs the newly created list of beans public list tobeanlist resultset rs class type throws sqlexception list results new arraylist if rs next return results propertydescriptor props this propertydescriptors type resultsetmetadata rsmd rs getmetadata int columntoproperty this mapcolumnstoproperties rsmd props do results add this createbean rs type props columntoproperty while rs next return results creates a new object and initializes its fields from the resultset the type of bean to create rs the result set type the bean type the return type of the object props the property descriptors columntoproperty the column indices in the result set an initialized object sqlexception if a database error occurs private t createbean resultset rs class type propertydescriptor props int columntoproperty throws sqlexception t bean this newinstance type for int i i columntoproperty length i if columntoproperty i property_not_found continue propertydescriptor prop props columntoproperty i class proptype prop getpropertytype object value this processcolumn rs i proptype if proptype null value null proptype isprimitive value primitivedefaults get proptype this callsetter bean prop value return bean calls the setter method on the target object for the given property if no setter method exists for the property this method does nothing target the object to set the property on prop the property to set value the value to pass into the setter sqlexception if an error occurs setting the property private void callsetter object target propertydescriptor prop object value throws sqlexception method setter prop getwritemethod if setter null return class params setter getparametertypes try convert types for some popular ones if value null if value instanceof java util date if params getname equals java sql date value new java sql date java util date value gettime else if params getname equals java sql time value new java sql time java util date value gettime else if params getname equals java sql timestamp value new java sql timestamp java util date value gettime dont call setter if the value object isnt the right type if this iscompatibletype value params setter invoke target new object value else throw new sqlexception cannot set prop getname incompatible types catch illegalargumentexception e throw new sqlexception cannot set prop getname e getmessage catch illegalaccessexception e throw new sqlexception cannot set prop getname e getmessage catch invocationtargetexception e throw new sqlexception cannot set prop getname e getmessage resultset getobject returns an integer object for an int column the setter method for the property might take an integer or a primitive int this method returns true if the value can be successfully passed into the setter method remember method invoke handles the unwrapping of integer into an int value the value to be passed into the setter method type the setters parameter type boolean true if the value is compatible private boolean iscompatibletype object value class type do object check first then primitives if value null type isinstance value return true else if type equals integer type integer class isinstance value return true else if type equals long type long class isinstance value return true else if type equals double type double class isinstance value return true else if type equals float type float class isinstance value return true else if type equals short type short class isinstance value return true else if type equals byte type byte class isinstance value return true else if type equals character type character class isinstance value return true else if type equals boolean type boolean class isinstance value return true else return false factory method that returns a new instance of the given class this is called at the start of the bean creation process and may be overridden to provide custom behavior like returning a cached bean instance the type of object to create c the class to create an object from a newly created object of the class sqlexception if creation failed protected t newinstance class c throws sqlexception try return c newinstance catch instantiationexception e throw new sqlexception cannot create c getname e getmessage catch illegalaccessexception e throw new sqlexception cannot create c getname e getmessage returns a propertydescriptor for the given class c the class to retrieve propertydescriptors for a propertydescriptor describing the class sqlexception if introspection failed private propertydescriptor propertydescriptors class c throws sqlexception introspector caches beaninfo classes for better performance beaninfo beaninfo null try beaninfo introspector getbeaninfo c catch introspectionexception e throw new sqlexception bean introspection failed e getmessage return beaninfo getpropertydescriptors the positions in the returned array represent column numbers the values stored at each position represent the index in the propertydescriptor for the bean property that matches the column name if no bean property was found for a column the position is set to property_not_found rsmd the resultsetmetadata containing column information props the bean property descriptors sqlexception if a database access error occurs an int with column index to property index mappings the th element is meaningless because jdbc column indexing starts at protected int mapcolumnstoproperties resultsetmetadata rsmd propertydescriptor props throws sqlexception int cols rsmd getcolumncount int columntoproperty new int cols arrays fill columntoproperty property_not_found for int col col cols col string columnname rsmd getcolumnlabel col if null columnname columnname length columnname rsmd getcolumnname col for int i i props length i if columnname equalsignorecase props i getname columntoproperty col i break return columntoproperty convert a resultset column into an object simple implementations could just call rs getobject index while more complex implementations could perform type manipulation to match the columns type to the bean property type this implementation calls the appropriate resultset getter method for the given property type to perform the type conversion if the property type doesnt match one of the supported resultset types getobject is called rs the resultset currently being processed it is positioned on a valid row before being passed into this method index the current column index being processed proptype the bean property type that this column needs to be converted into sqlexception if a database access error occurs the object from the resultset at the given column index after optional type processing or null if the column value was sql null protected object processcolumn resultset rs int index class proptype throws sqlexception if proptype isprimitive rs getobject index null return null if proptype isprimitive rs getobject index null return null if proptype equals string class return rs getstring index else if proptype equals integer type proptype equals integer class return rs getint index else if proptype equals boolean type proptype equals boolean class return rs getboolean index else if proptype equals long type proptype equals long class return rs getlong index else if proptype equals double type proptype equals double class return rs getdouble index else if proptype equals float type proptype equals float class return rs getfloat index else if proptype equals short type proptype equals short class return rs getshort index else if proptype equals byte type proptype equals byte class return rs getbyte index else if proptype equals timestamp class return rs gettimestamp index else return rs getobject index
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils import java io printwriter import java sql connection import java sql resultset import java sql sqlexception import java sql statement a collection of jdbc helper methods this class is thread safe public final class dbutils close a connection avoid closing if null conn connection to close sqlexception if a database access error occurs public static void close connection conn throws sqlexception if conn null conn close close a resultset avoid closing if null rs resultset to close sqlexception if a database access error occurs public static void close resultset rs throws sqlexception if rs null rs close close a statement avoid closing if null stmt statement to close sqlexception if a database access error occurs public static void close statement stmt throws sqlexception if stmt null stmt close close a connection avoid closing if null and hide any sqlexceptions that occur conn connection to close public static void closequietly connection conn try close conn catch sqlexception e quiet close a connection statement and resultset avoid closing if null and hide any sqlexceptions that occur conn connection to close stmt statement to close rs resultset to close public static void closequietly connection conn statement stmt resultset rs try closequietly rs finally try closequietly stmt finally closequietly conn close a resultset avoid closing if null and hide any sqlexceptions that occur rs resultset to close public static void closequietly resultset rs try close rs catch sqlexception e quiet close a statement avoid closing if null and hide any sqlexceptions that occur stmt statement to close public static void closequietly statement stmt try close stmt catch sqlexception e quiet commits a connection then closes it avoid closing if null conn connection to close sqlexception if a database access error occurs public static void commitandclose connection conn throws sqlexception if conn null try conn commit finally conn close commits a connection then closes it avoid closing if null and hide any sqlexceptions that occur conn connection to close public static void commitandclosequietly connection conn try commitandclose conn catch sqlexception e quiet loads and registers a database driver class if this succeeds it returns true else it returns false driverclassname of driver to load boolean true if the driver was found otherwise false public static boolean loaddriver string driverclassname try class forname driverclassname newinstance return true catch classnotfoundexception e return false catch illegalaccessexception e constructor is private ok for drivermanager contract return true catch instantiationexception e return false catch throwable e return false print the stack trace for a sqlexception to stderr e sqlexception to print stack trace of public static void printstacktrace sqlexception e printstacktrace e new printwriter system err print the stack trace for a sqlexception to a specified printwriter e sqlexception to print stack trace of pw printwriter to print to public static void printstacktrace sqlexception e printwriter pw sqlexception next e while next null next printstacktrace pw next next getnextexception if next null pw println next sqlexception print warnings on a connection to stderr conn connection to print warnings from public static void printwarnings connection conn printwarnings conn new printwriter system err print warnings on a connection to a specified printwriter conn connection to print warnings from pw printwriter to print to public static void printwarnings connection conn printwriter pw if conn null try printstacktrace conn getwarnings pw catch sqlexception e printstacktrace e pw rollback any changes made on the given connection conn connection to rollback a null value is legal sqlexception if a database access error occurs public static void rollback connection conn throws sqlexception if conn null conn rollback performs a rollback on the connection then closes it avoid closing if null conn connection to rollback a null value is legal sqlexception if a database access error occurs dbutils public static void rollbackandclose connection conn throws sqlexception if conn null try conn rollback finally conn close performs a rollback on the connection then closes it avoid closing if null and hide any sqlexceptions that occur conn connection to rollback a null value is legal dbutils public static void rollbackandclosequietly connection conn try rollbackandclose conn catch sqlexception e quiet
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils handlers import java sql resultset import java sql sqlexception import java util hashmap import java util map import org apache commons dbutils resultsethandler resultsethandler implementation that returns a map resultset rows are converted into objects vs which are then stored in a map under the given keys ks org apache commons dbutils resultsethandler dbutils public abstract class abstractkeyedhandler k v implements resultsethandler map k v convert each rows columns into a map and store then in a map under resultset getobject key key rs resultset to process a map never null sqlexception if a database access error occurs org apache commons dbutils resultsethandler handle java sql resultset public map k v handle resultset rs throws sqlexception map k v result createmap while rs next result put createkey rs createrow rs return result this factory method is called by handle to create the map to store records in this implementation returns a hashmap instance map to store records in protected map k v createmap return new hashmap k v this factory method is called by handle to retrieve the key value from the current resultset row rs resultset to create a key from k from the configured key column name index sqlexception if a database access error occurs protected abstract k createkey resultset rs throws sqlexception this factory method is called by handle to store the current resultset row in some object rs resultset to create a row from v object created from the current row sqlexception if a database access error occurs protected abstract v createrow resultset rs throws sqlexception
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils handlers import java sql resultset import java sql sqlexception import java util arraylist import java util list import org apache commons dbutils resultsethandler abstract class that simplify development of resultsethandler classes that convert resultset into list org apache commons dbutils resultsethandler public abstract class abstractlisthandler implements resultsethandler list whole resultset handler it produce list as result to convert individual rows into java objects it uses handlerow resultset method handlerow resultset rs resultset to process a list of all rows in the result set sqlexception error occurs public list handle resultset rs throws sqlexception list rows new arraylist while rs next rows add this handlerow rs return rows row handler method converts current row into some java object rs resultset to process row processing result sqlexception error occurs protected abstract t handlerow resultset rs throws sqlexception
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils handlers import java sql resultset import java sql sqlexception import org apache commons dbutils basicrowprocessor import org apache commons dbutils resultsethandler import org apache commons dbutils rowprocessor resultsethandler implementation that converts a resultset into an object this class is thread safe org apache commons dbutils resultsethandler public class arrayhandler implements resultsethandler object singleton processor instance that handlers share to save memory notice the default scoping to allow only classes in this package to use this instance static final rowprocessor row_processor new basicrowprocessor the rowprocessor implementation to use when converting rows into arrays private final rowprocessor convert creates a new instance of arrayhandler using a basicrowprocessor for conversion public arrayhandler this row_processor creates a new instance of arrayhandler convert the rowprocessor implementation to use when converting rows into arrays public arrayhandler rowprocessor convert super this convert convert places the column values from the first row in an object rs resultset to process an object or null if there are no rows in the resultset sqlexception if a database access error occurs org apache commons dbutils resultsethandler handle java sql resultset public object handle resultset rs throws sqlexception return rs next this convert toarray rs null
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils handlers import java sql resultset import java sql sqlexception import org apache commons dbutils rowprocessor resultsethandler implementation that converts the resultset into a list of object s this class is thread safe org apache commons dbutils resultsethandler public class arraylisthandler extends abstractlisthandler object the rowprocessor implementation to use when converting rows into object s private final rowprocessor convert creates a new instance of arraylisthandler using a basicrowprocessor for conversions public arraylisthandler this arrayhandler row_processor creates a new instance of arraylisthandler convert the rowprocessor implementation to use when converting rows into object s public arraylisthandler rowprocessor convert super this convert convert convert rows columns into an object rs resultset to process object never null sqlexception if a database access error occurs org apache commons dbutils handlers abstractlisthandler handle resultset protected object handlerow resultset rs throws sqlexception return this convert toarray rs
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils handlers import java sql resultset import java sql sqlexception import org apache commons dbutils resultsethandler import org apache commons dbutils rowprocessor resultsethandler implementation that converts the first resultset row into a javabean this class is thread safe org apache commons dbutils resultsethandler public class beanhandler implements resultsethandler the class of beans produced by this handler private final class type the rowprocessor implementation to use when converting rows into beans private final rowprocessor convert creates a new instance of beanhandler type the class that objects returned from handle are created from public beanhandler class type this type arrayhandler row_processor creates a new instance of beanhandler type the class that objects returned from handle are created from convert the rowprocessor implementation to use when converting rows into beans public beanhandler class type rowprocessor convert this type type this convert convert convert the first row of the resultset into a bean with the class given in the constructor rs resultset to process an initialized javabean or null if there were no rows in the resultset sqlexception if a database access error occurs org apache commons dbutils resultsethandler handle java sql resultset public t handle resultset rs throws sqlexception return rs next this convert tobean rs this type null
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils handlers import java sql resultset import java sql sqlexception import java util list import org apache commons dbutils resultsethandler import org apache commons dbutils rowprocessor resultsethandler implementation that converts a resultset into a list of beans this class is thread safe org apache commons dbutils resultsethandler public class beanlisthandler implements resultsethandler list the class of beans produced by this handler private final class type the rowprocessor implementation to use when converting rows into beans private final rowprocessor convert creates a new instance of beanlisthandler type the class that objects returned from handle are created from public beanlisthandler class type this type arrayhandler row_processor creates a new instance of beanlisthandler type the class that objects returned from handle are created from convert the rowprocessor implementation to use when converting rows into beans public beanlisthandler class type rowprocessor convert this type type this convert convert convert the whole resultset into a list of beans with the class given in the constructor rs the resultset to handle a list of beans never null sqlexception if a database access error occurs org apache commons dbutils rowprocessor tobeanlist resultset class public list handle resultset rs throws sqlexception return this convert tobeanlist rs type
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils handlers import java sql resultset import java sql sqlexception resultsethandler implementation that converts one resultset column into a list of objects this class is thread safe org apache commons dbutils resultsethandler dbutils public class columnlisthandler extends abstractlisthandler the column number to retrieve private final int columnindex the column name to retrieve either columnname or columnindex will be used but never both private final string columnname creates a new instance of columnlisthandler the first column of each row will be returned from handle public columnlisthandler this null creates a new instance of columnlisthandler columnindex the index of the column to retrieve from the resultset public columnlisthandler int columnindex this columnindex null creates a new instance of columnlisthandler columnname the name of the column to retrieve from the resultset public columnlisthandler string columnname this columnname private helper columnindex the index of the column to retrieve from the resultset columnname the name of the column to retrieve from the resultset private columnlisthandler int columnindex string columnname super this columnindex columnindex this columnname columnname returns one resultset column value as object rs resultset to process object never null sqlexception if a database access error occurs org apache commons dbutils handlers abstractlisthandler handle resultset protected object handlerow resultset rs throws sqlexception if this columnname null return rs getobject this columnindex else return rs getobject this columnname
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils handlers import java sql resultset import java sql sqlexception import java util map import org apache commons dbutils rowprocessor resultsethandler implementation that returns a map of maps resultset rows are converted into maps which are then stored in a map under the given key if you had a person table with a primary key column called id you could retrieve rows from the table like this resultsethandler h new keyedhandler id map found map queryrunner query select id name age from person h map jane map found get new long janes id is string janesname string jane get name integer janesage integer jane get age note that the id passed to keyedhandler and name and age passed to the returned maps get method can be in any case the data types returned for name and age are dependent upon how your jdbc driver converts sql column types from the person table into java types this class is thread safe org apache commons dbutils resultsethandler dbutils public class keyedhandler extends abstractkeyedhandler object map string object the rowprocessor implementation to use when converting rows into objects protected final rowprocessor convert the column index to retrieve key values from defaults to protected final int columnindex the column name to retrieve key values from either columnname or columnindex will be used but never both protected final string columnname creates a new instance of keyedhandler the value of the first column of each row will be a key in the map public keyedhandler this arrayhandler row_processor null creates a new instance of keyedhandler the value of the first column of each row will be a key in the map convert the rowprocessor implementation to use when converting rows into maps public keyedhandler rowprocessor convert this convert null creates a new instance of keyedhandler columnindex the values to use as keys in the map are retrieved from the column at this index public keyedhandler int columnindex this arrayhandler row_processor columnindex null creates a new instance of keyedhandler columnname the values to use as keys in the map are retrieved from the column with this name public keyedhandler string columnname this arrayhandler row_processor columnname private helper convert the rowprocessor implementation to use when converting rows into maps columnindex the values to use as keys in the map are retrieved from the column at this index columnname the values to use as keys in the map are retrieved from the column with this name private keyedhandler rowprocessor convert int columnindex string columnname super this convert convert this columnindex columnindex this columnname columnname this factory method is called by handle to retrieve the key value from the current resultset row this implementation returns resultset getobject for the configured key column name or index rs resultset to create a key from object from the configured key column name index sqlexception if a database access error occurs protected object createkey resultset rs throws sqlexception return columnname null rs getobject columnindex rs getobject columnname this factory method is called by handle to store the current resultset row in some object this implementation returns a map with case insensitive column names as keys calls to map get col and map get col return the same value rs resultset to create a row from object typed map containing column names to values sqlexception if a database access error occurs protected map string object createrow resultset rs throws sqlexception return this convert tomap rs
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils handlers import java sql resultset import java sql sqlexception import java util map import org apache commons dbutils resultsethandler import org apache commons dbutils rowprocessor resultsethandler implementation that converts the first resultset row into a map this class is thread safe org apache commons dbutils resultsethandler public class maphandler implements resultsethandler map string object the rowprocessor implementation to use when converting rows into maps private final rowprocessor convert creates a new instance of maphandler using a basicrowprocessor for conversion public maphandler this arrayhandler row_processor creates a new instance of maphandler convert the rowprocessor implementation to use when converting rows into maps public maphandler rowprocessor convert super this convert convert converts the first row in the resultset into a map rs resultset to process a map with the values from the first row or null if there are no rows in the resultset sqlexception if a database access error occurs org apache commons dbutils resultsethandler handle java sql resultset public map string object handle resultset rs throws sqlexception return rs next this convert tomap rs null
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils handlers import java sql resultset import java sql sqlexception import java util map import org apache commons dbutils rowprocessor resultsethandler implementation that converts a resultset into a list of maps this class is thread safe org apache commons dbutils resultsethandler public class maplisthandler extends abstractlisthandler map string object the rowprocessor implementation to use when converting rows into maps private final rowprocessor convert creates a new instance of maplisthandler using a basicrowprocessor for conversion public maplisthandler this arrayhandler row_processor creates a new instance of maplisthandler convert the rowprocessor implementation to use when converting rows into maps public maplisthandler rowprocessor convert super this convert convert converts the resultset row into a map object rs resultset to process a map never null sqlexception if a database access error occurs org apache commons dbutils handlers abstractlisthandler handle resultset protected map string object handlerow resultset rs throws sqlexception return this convert tomap rs
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils handlers import java sql resultset import java sql sqlexception import org apache commons dbutils resultsethandler resultsethandler implementation that converts one resultset column into an object this class is thread safe org apache commons dbutils resultsethandler public class scalarhandler implements resultsethandler the column number to retrieve private final int columnindex the column name to retrieve either columnname or columnindex will be used but never both private final string columnname creates a new instance of scalarhandler the first column will be returned from handle public scalarhandler this null creates a new instance of scalarhandler columnindex the index of the column to retrieve from the resultset public scalarhandler int columnindex this columnindex null creates a new instance of scalarhandler columnname the name of the column to retrieve from the resultset public scalarhandler string columnname this columnname helper constructor columnindex the index of the column to retrieve from the resultset columnname the name of the column to retrieve from the resultset private scalarhandler int columnindex string columnname this columnindex columnindex this columnname columnname returns one resultset column as an object via the resultset getobject method that performs type conversions rs resultset to process the column or null if there are no rows in the resultset sqlexception if a database access error occurs org apache commons dbutils resultsethandler handle java sql resultset public object handle resultset rs throws sqlexception if rs next if this columnname null return rs getobject this columnindex else return rs getobject this columnname else return null
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils import java lang reflect invocationhandler import java lang reflect proxy import java sql callablestatement import java sql connection import java sql driver import java sql preparedstatement import java sql resultset import java sql resultsetmetadata import java sql statement creates proxy implementations of jdbc interfaces this avoids incompatibilities between the jdbc and jdbc interfaces this class is thread safe java lang reflect proxy java lang reflect invocationhandler public class proxyfactory the singleton instance of this class private static final proxyfactory instance new proxyfactory returns the singleton instance of this class singleton instance public static proxyfactory instance return instance protected constructor for proxyfactory subclasses to use protected proxyfactory super convenience method to generate a single interface proxy using the handlers classloader the type of object to proxy type the type of object to proxy handler the handler that intercepts overrides method calls proxied object public t newproxyinstance class type invocationhandler handler return type cast proxy newproxyinstance handler getclass getclassloader new class type handler creates a new proxy callablestatement object handler the handler that intercepts overrides method calls proxied callablestatement public callablestatement createcallablestatement invocationhandler handler return newproxyinstance callablestatement class handler creates a new proxy connection object handler the handler that intercepts overrides method calls proxied connection public connection createconnection invocationhandler handler return newproxyinstance connection class handler creates a new proxy driver object handler the handler that intercepts overrides method calls proxied driver public driver createdriver invocationhandler handler return newproxyinstance driver class handler creates a new proxy preparedstatement object handler the handler that intercepts overrides method calls proxied preparedstatement public preparedstatement createpreparedstatement invocationhandler handler return newproxyinstance preparedstatement class handler creates a new proxy resultset object handler the handler that intercepts overrides method calls proxied resultset public resultset createresultset invocationhandler handler return newproxyinstance resultset class handler creates a new proxy resultsetmetadata object handler the handler that intercepts overrides method calls proxied resultsetmetadata public resultsetmetadata createresultsetmetadata invocationhandler handler return newproxyinstance resultsetmetadata class handler creates a new proxy statement object handler the handler that intercepts overrides method calls proxied statement public statement createstatement invocationhandler handler return newproxyinstance statement class handler
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils import java io ioexception import java io inputstream import java util hashmap import java util map import java util properties queryloader is a registry for sets of queries so that multiple copies of the same queries arent loaded into memory this implementation loads properties files filled with query name to sql mappings this class is thread safe public class queryloader the singleton instance of this class private static final queryloader instance new queryloader return an instance of this class the singleton instance public static queryloader instance return instance maps query set names to maps of their queries private final map string map string string queries new hashmap string map string string queryloader constructor protected queryloader super loads a map of query names to sql values the maps are cached so a subsequent request to load queries from the same path will return the cached map path the path that the classloader will use to find the file this is not a file system path if you had a jarred queries properties file in the com yourcorp app jdbc package you would pass com yourcorp app jdbc queries properties to this method ioexception if a file access error occurs illegalargumentexception if the classloader cant find a file at the given path map of query names to sql values public synchronized map string string load string path throws ioexception map string string querymap map string string this queries get path if querymap null querymap this loadqueries path this queries put path querymap return querymap loads a set of named queries into a map object this implementation reads a properties file at the given path path the path that the classloader will use to find the file ioexception if a file access error occurs illegalargumentexception if the classloader cant find a file at the given path dbutils map of query names to sql values unchecked protected map string string loadqueries string path throws ioexception findbugs flags getclass getresource as a bad practice maybe we should change the api inputstream in getclass getresourceasstream path if in null throw new illegalargumentexception path not found properties props new properties props load in copy to hashmap for better performance return new hashmap props removes the queries for the given path from the cache path the path that the queries were loaded from public synchronized void unload string path this queries remove path
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils import java beans introspectionexception import java beans introspector import java beans propertydescriptor import java lang reflect invocationtargetexception import java lang reflect method import java sql connection import java sql parametermetadata import java sql preparedstatement import java sql resultset import java sql sqlexception import java sql statement import java sql types import java util arrays import javax sql datasource executes sql queries with pluggable strategies for handling resultsets this class is thread safe resultsethandler public class queryrunner is parametermetadata getparametertype int broken have we tried it yet private volatile boolean pmdknownbroken false the datasource to retrieve connections from protected final datasource ds constructor for queryrunner public queryrunner super ds null constructor for queryrunner allows workaround for oracle drivers pmdknownbroken oracle drivers dont support parametermetadata getparametertype int if pmdknownbroken is set to true we wont even try it if false well try it and if it breaks well remember not to use it again public queryrunner boolean pmdknownbroken super this pmdknownbroken pmdknownbroken ds null constructor for queryrunner allows workaround for oracle drivers methods that do not take a connection parameter will retrieve connections from this datasource ds the datasource to retrieve connections from public queryrunner datasource ds super this ds ds constructor for queryrunner allows workaround for oracle drivers methods that do not take a connection parameter will retrieve connections from this datasource ds the datasource to retrieve connections from pmdknownbroken oracle drivers dont support parametermetadata getparametertype int if pmdknownbroken is set to true we wont even try it if false well try it and if it breaks well remember not to use it again public queryrunner datasource ds boolean pmdknownbroken super this pmdknownbroken pmdknownbroken this ds ds execute a batch of sql insert update or delete queries conn the connection to use to run the query the caller is responsible for closing this connection sql the sql to execute params an array of query replacement parameters each row in this array is one set of batch replacement values the number of rows updated per statement sqlexception if a database access error occurs dbutils public int batch connection conn string sql object params throws sqlexception preparedstatement stmt null int rows null try stmt this preparestatement conn sql for int i i params length i this fillstatement stmt params i stmt addbatch rows stmt executebatch catch sqlexception e this rethrow e sql object params finally close stmt return rows execute a batch of sql insert update or delete queries the connection is retrieved from the datasource set in the constructor this connection must be in auto commit mode or the update will not be saved sql the sql to execute params an array of query replacement parameters each row in this array is one set of batch replacement values the number of rows updated per statement sqlexception if a database access error occurs dbutils public int batch string sql object params throws sqlexception connection conn this prepareconnection try return this batch conn sql params finally close conn fill the preparedstatement replacement parameters with the given objects stmt preparedstatement to fill params query replacement parameters null is a valid value to pass in sqlexception if a database access error occurs public void fillstatement preparedstatement stmt object params throws sqlexception if params null return parametermetadata pmd null if pmdknownbroken pmd stmt getparametermetadata if pmd getparametercount params length throw new sqlexception too many parameters expected pmd getparametercount was given params length for int i i params length i if params i null stmt setobject i params i else varchar works with many drivers regardless of the actual column type oddly null and other dont work with oracles drivers int sqltype types varchar if pmdknownbroken try sqltype pmd getparametertype i catch sqlexception e pmdknownbroken true stmt setnull i sqltype fill the preparedstatement replacement parameters with the given objects bean property values stmt preparedstatement to fill bean a javabean object properties an ordered array of properties this gives the order to insert values in the statement sqlexception if a database access error occurs public void fillstatementwithbean preparedstatement stmt object bean propertydescriptor properties throws sqlexception object params new object properties length for int i i properties length i propertydescriptor property properties i object value null method method property getreadmethod if method null throw new runtimeexception no read method for bean property bean getclass property getname try value method invoke bean new object catch invocationtargetexception e throw new runtimeexception couldnt invoke method method e catch illegalargumentexception e throw new runtimeexception couldnt invoke method with arguments method e catch illegalaccessexception e throw new runtimeexception couldnt invoke method method e params i value fillstatement stmt params fill the preparedstatement replacement parameters with the given objects bean property values stmt preparedstatement to fill bean a javabean object propertynames an ordered array of property names these should match the getters setters this gives the order to insert values in the statement sqlexception if a database access error occurs public void fillstatementwithbean preparedstatement stmt object bean string propertynames throws sqlexception propertydescriptor descriptors try descriptors introspector getbeaninfo bean getclass getpropertydescriptors catch introspectionexception e throw new runtimeexception couldnt introspect bean bean getclass tostring e propertydescriptor sorted new propertydescriptor propertynames length for int i i propertynames length i string propertyname propertynames i if propertyname null throw new nullpointerexception propertyname cant be null i boolean found false for int j j descriptors length j propertydescriptor descriptor descriptors j if propertyname equals descriptor getname sorted i descriptor found true break if found throw new runtimeexception couldnt find bean property bean getclass propertyname fillstatementwithbean stmt bean sorted returns the datasource this runner is using queryrunner methods always call this method to get the datasource so subclasses can provide specialized behavior datasource the runner is using public datasource getdatasource return this ds factory method that creates and initializes a preparedstatement object for the given sql queryrunner methods always call this method to prepare statements for them subclasses can override this method to provide special preparedstatement configuration if needed this implementation simply calls conn preparestatement sql conn the connection used to create the preparedstatement sql the sql statement to prepare an initialized preparedstatement sqlexception if a database access error occurs protected preparedstatement preparestatement connection conn string sql throws sqlexception return conn preparestatement sql factory method that creates and initializes a connection object queryrunner methods always call this method to retrieve connections from its datasource subclasses can override this method to provide special connection configuration if needed this implementation simply calls ds getconnection an initialized connection sqlexception if a database access error occurs dbutils protected connection prepareconnection throws sqlexception if this getdatasource null throw new sqlexception queryrunner requires a datasource to be invoked in this way or a connection should be passed in return this getdatasource getconnection execute an sql select query with a single replacement parameter the caller is responsible for closing the connection the type of object that the handler returns conn the connection to execute the query in sql the query to execute param the replacement parameter rsh the handler that converts the results into an object the object returned by the handler sqlexception if a database access error occurs use query connection string resultsethandler object public t query connection conn string sql object param resultsethandler rsh throws sqlexception return this query conn sql rsh new object param execute an sql select query with replacement parameters the caller is responsible for closing the connection the type of object that the handler returns conn the connection to execute the query in sql the query to execute params the replacement parameters rsh the handler that converts the results into an object the object returned by the handler sqlexception if a database access error occurs use query connection string resultsethandler object instead public t query connection conn string sql object params resultsethandler rsh throws sqlexception return query conn sql rsh params execute an sql select query with replacement parameters the caller is responsible for closing the connection the type of object that the handler returns conn the connection to execute the query in sql the query to execute rsh the handler that converts the results into an object params the replacement parameters the object returned by the handler sqlexception if a database access error occurs public t query connection conn string sql resultsethandler rsh object params throws sqlexception preparedstatement stmt null resultset rs null t result null try stmt this preparestatement conn sql this fillstatement stmt params rs this wrap stmt executequery result rsh handle rs catch sqlexception e this rethrow e sql params finally try close rs finally close stmt return result execute an sql select query without any replacement parameters the caller is responsible for closing the connection the type of object that the handler returns conn the connection to execute the query in sql the query to execute rsh the handler that converts the results into an object the object returned by the handler sqlexception if a database access error occurs public t query connection conn string sql resultsethandler rsh throws sqlexception return this query conn sql rsh object null executes the given select sql with a single replacement parameter the connection is retrieved from the datasource set in the constructor the type of object that the handler returns sql the sql statement to execute param the replacement parameter rsh the handler used to create the result object from the resultset an object generated by the handler sqlexception if a database access error occurs use query string resultsethandler object public t query string sql object param resultsethandler rsh throws sqlexception return this query sql rsh new object param executes the given select sql query and returns a result object the connection is retrieved from the datasource set in the constructor the type of object that the handler returns sql the sql statement to execute params initialize the preparedstatements in parameters with this array rsh the handler used to create the result object from the resultset an object generated by the handler sqlexception if a database access error occurs use query string resultsethandler object public t query string sql object params resultsethandler rsh throws sqlexception return query sql rsh params executes the given select sql query and returns a result object the connection is retrieved from the datasource set in the constructor the type of object that the handler returns sql the sql statement to execute rsh the handler used to create the result object from the resultset params initialize the preparedstatements in parameters with this array an object generated by the handler sqlexception if a database access error occurs public t query string sql resultsethandler rsh object params throws sqlexception connection conn this prepareconnection try return this query conn sql rsh params finally close conn executes the given select sql without any replacement parameters the connection is retrieved from the datasource set in the constructor the type of object that the handler returns sql the sql statement to execute rsh the handler used to create the result object from the resultset an object generated by the handler sqlexception if a database access error occurs public t query string sql resultsethandler rsh throws sqlexception return this query sql rsh object null throws a new exception with a more informative error message cause the original exception that will be chained to the new exception when its rethrown sql the query that was executing when the exception happened params the query replacement parameters null is a valid value to pass in sqlexception if a database access error occurs protected void rethrow sqlexception cause string sql object params throws sqlexception string causemessage cause getmessage if causemessage null causemessage stringbuffer msg new stringbuffer causemessage msg append query msg append sql msg append parameters if params null msg append else msg append arrays deeptostring params sqlexception e new sqlexception msg tostring cause getsqlstate cause geterrorcode e setnextexception cause throw e execute an sql insert update or delete query without replacement parameters conn the connection to use to run the query sql the sql to execute the number of rows updated sqlexception if a database access error occurs public int update connection conn string sql throws sqlexception return this update conn sql object null execute an sql insert update or delete query with a single replacement parameter conn the connection to use to run the query sql the sql to execute param the replacement parameter the number of rows updated sqlexception if a database access error occurs public int update connection conn string sql object param throws sqlexception return this update conn sql new object param execute an sql insert update or delete query conn the connection to use to run the query sql the sql to execute params the query replacement parameters the number of rows updated sqlexception if a database access error occurs public int update connection conn string sql object params throws sqlexception preparedstatement stmt null int rows try stmt this preparestatement conn sql this fillstatement stmt params rows stmt executeupdate catch sqlexception e this rethrow e sql params finally close stmt return rows executes the given insert update or delete sql statement without any replacement parameters the connection is retrieved from the datasource set in the constructor this connection must be in auto commit mode or the update will not be saved sql the sql statement to execute sqlexception if a database access error occurs the number of rows updated public int update string sql throws sqlexception return this update sql object null executes the given insert update or delete sql statement with a single replacement parameter the connection is retrieved from the datasource set in the constructor this connection must be in auto commit mode or the update will not be saved sql the sql statement to execute param the replacement parameter sqlexception if a database access error occurs the number of rows updated public int update string sql object param throws sqlexception return this update sql new object param executes the given insert update or delete sql statement the connection is retrieved from the datasource set in the constructor this connection must be in auto commit mode or the update will not be saved sql the sql statement to execute params initializes the preparedstatements in i e parameters sqlexception if a database access error occurs the number of rows updated public int update string sql object params throws sqlexception connection conn this prepareconnection try return this update conn sql params finally close conn wrap the resultset in a decorator before processing it this implementation returns the resultset it is given without any decoration often the implementation of this method can be done in an anonymous inner class like this queryrunner run new queryrunner protected resultset wrap resultset rs return stringtrimmedresultset wrap rs rs the resultset to decorate never null the resultset wrapped in some decorator protected resultset wrap resultset rs return rs close a connection this implementation avoids closing if null and does not suppress any exceptions subclasses can override to provide special handling like logging conn connection to close sqlexception if a database access error occurs dbutils protected void close connection conn throws sqlexception dbutils close conn close a statement this implementation avoids closing if null and does not suppress any exceptions subclasses can override to provide special handling like logging stmt statement to close sqlexception if a database access error occurs dbutils protected void close statement stmt throws sqlexception dbutils close stmt close a resultset this implementation avoids closing if null and does not suppress any exceptions subclasses can override to provide special handling like logging rs resultset to close sqlexception if a database access error occurs dbutils protected void close resultset rs throws sqlexception dbutils close rs
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils import java sql resultset import java sql sqlexception implementations of this interface convert resultsets into other objects public interface resultsethandler turn the resultset into an object rs the resultset to handle it has not been touched before being passed to this method an object initialized with resultset data it is legal for implementations to return null if the resultset contained rows sqlexception if a database access error occurs public t handle resultset rs throws sqlexception
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils import java sql resultset import java sql sqlexception import java util iterator wraps a resultset in an iterator object this is useful when you want to present a non database application layer with domain neutral data this implementation requires the resultset islast method to be implemented public class resultsetiterator implements iterator object the wrapped resultset private final resultset rs the processor to use when converting a row into an object private final rowprocessor convert constructor for resultsetiterator rs wrap this resultset in an iterator public resultsetiterator resultset rs this rs new basicrowprocessor constructor for resultsetiterator rs wrap this resultset in an iterator convert the processor to use when converting a row into an object defaults to a basicrowprocessor public resultsetiterator resultset rs rowprocessor convert this rs rs this convert convert returns true if there are more rows in the resultset boolean true if there are more rows runtimeexception if an sqlexception occurs public boolean hasnext try return rs islast catch sqlexception e rethrow e return false returns the next row as an object an object with the same number of elements as columns in the resultset java util iterator next runtimeexception if an sqlexception occurs public object next try rs next return this convert toarray rs catch sqlexception e rethrow e return null deletes the current row from the resultset java util iterator remove runtimeexception if an sqlexception occurs public void remove try this rs deleterow catch sqlexception e rethrow e rethrow the sqlexception as a runtimeexception this implementation creates a new runtimeexception with the sqlexceptions error message e sqlexception to rethrow dbutils protected void rethrow sqlexception e throw new runtimeexception e getmessage generates an iterable suitable for use in for each loops rs wrap this resultset in an iterator an iterable suitable for use in for each loops public static iterable object iterable final resultset rs return new iterable object public iterator object iterator return new resultsetiterator rs
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils import java sql resultset import java sql sqlexception import java util list import java util map rowprocessor implementations convert resultset rows into various other objects implementations can extend basicrowprocessor to protect themselves from changes to this interface basicrowprocessor public interface rowprocessor create an object from the column values in one resultset row the resultset should be positioned on a valid row before passing it to this method implementations of this method must not alter the row position of the resultset rs resultset that supplies the array data sqlexception if a database access error occurs the newly created array public object toarray resultset rs throws sqlexception create a javabean from the column values in one resultset row the resultset should be positioned on a valid row before passing it to this method implementations of this method must not alter the row position of the resultset the type of bean to create rs resultset that supplies the bean data type class from which to create the bean instance sqlexception if a database access error occurs the newly created bean public t tobean resultset rs class type throws sqlexception create a list of javabeans from the column values in all resultset rows resultset next should not be called before passing it to this method the type of bean to create rs resultset that supplies the bean data type class from which to create the bean instance sqlexception if a database access error occurs a list of beans with the given type in the order they were returned by the resultset public list tobeanlist resultset rs class type throws sqlexception create a map from the column values in one resultset row the resultset should be positioned on a valid row before passing it to this method implementations of this method must not alter the row position of the resultset rs resultset that supplies the map data sqlexception if a database access error occurs the newly created map public map string object tomap resultset rs throws sqlexception
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils wrappers import java io inputstream import java io reader import java lang reflect invocationhandler import java lang reflect method import java math bigdecimal import java net url import java sql blob import java sql clob import java sql date import java sql ref import java sql resultset import java sql time import java sql timestamp import java util hashmap import java util map import org apache commons dbutils proxyfactory decorates a resultset with checks for a sql null value on each getxxx method if a column value obtained by a getxxx method is not sql null the column value is returned if the column value is sql null an alternate value is returned the alternate value defaults to the java null value which can be overridden for instances of the class usage example connection conn somehow get a connection statement stmt conn createstatement resultset rs stmt executequery select col col from table wrap the result set for sql null checking sqlnullcheckedresultset wrapper new sqlnullcheckedresultset rs wrapper setnullstring n a set null string wrapper setnullint set null integer rs proxyfactory instance createresultset wrapper while rs next if col is sql null value returned will be n a string col rs getstring col if col is sql null value returned will be int col rs getint col rs close unlike some other classes in dbutils this class is not thread safe public class sqlnullcheckedresultset implements invocationhandler maps normal method names ie getbigdecimal to the corresponding null method object ie getnullbigdecimal private static final map string method nullmethods new hashmap string method static method methods sqlnullcheckedresultset class getmethods for int i i methods length i string methodname methods i getname if methodname startswith getnull string normalname get methodname substring nullmethods put normalname methods i the factory to create proxies with private static final proxyfactory factory proxyfactory instance wraps the resultset in an instance of this class this is equivalent to proxyfactory instance createresultset new sqlnullcheckedresultset rs rs the resultset to wrap wrapped resultset public static resultset wrap resultset rs return factory createresultset new sqlnullcheckedresultset rs private inputstream nullasciistream null private bigdecimal nullbigdecimal null private inputstream nullbinarystream null private blob nullblob null private boolean nullboolean false private byte nullbyte private byte nullbytes null private reader nullcharacterstream null private clob nullclob null private date nulldate null private double nulldouble private float nullfloat f private int nullint private long nulllong private object nullobject null private ref nullref null private short nullshort private string nullstring null private time nulltime null private timestamp nulltimestamp null private url nullurl null the wrapped result private final resultset rs constructs a new instance of sqlnullcheckedresultset to wrap the specified resultset rs resultset to wrap public sqlnullcheckedresultset resultset rs super this rs rs returns the value when a sql null is encountered as the result of invoking a getasciistream method the value public inputstream getnullasciistream return this nullasciistream returns the value when a sql null is encountered as the result of invoking a getbigdecimal method the value public bigdecimal getnullbigdecimal return this nullbigdecimal returns the value when a sql null is encountered as the result of invoking a getbinarystream method the value public inputstream getnullbinarystream return this nullbinarystream returns the value when a sql null is encountered as the result of invoking a getblob method the value public blob getnullblob return this nullblob returns the value when a sql null is encountered as the result of invoking a getboolean method the value public boolean getnullboolean return this nullboolean returns the value when a sql null is encountered as the result of invoking a getbyte method the value public byte getnullbyte return this nullbyte returns the value when a sql null is encountered as the result of invoking a getbytes method the value public byte getnullbytes if this nullbytes null return null byte copy new byte this nullbytes length system arraycopy this nullbytes copy this nullbytes length return copy returns the value when a sql null is encountered as the result of invoking a getcharacterstream method the value public reader getnullcharacterstream return this nullcharacterstream returns the value when a sql null is encountered as the result of invoking a getclob method the value public clob getnullclob return this nullclob returns the value when a sql null is encountered as the result of invoking a getdate method the value public date getnulldate return this nulldate returns the value when a sql null is encountered as the result of invoking a getdouble method the value public double getnulldouble return this nulldouble returns the value when a sql null is encountered as the result of invoking a getfloat method the value public float getnullfloat return this nullfloat returns the value when a sql null is encountered as the result of invoking a getint method the value public int getnullint return this nullint returns the value when a sql null is encountered as the result of invoking a getlong method the value public long getnulllong return this nulllong returns the value when a sql null is encountered as the result of invoking a getobject method the value public object getnullobject return this nullobject returns the value when a sql null is encountered as the result of invoking a getref method the value public ref getnullref return this nullref returns the value when a sql null is encountered as the result of invoking a getshort method the value public short getnullshort return this nullshort returns the value when a sql null is encountered as the result of invoking a getstring method the value public string getnullstring return this nullstring returns the value when a sql null is encountered as the result of invoking a gettime method the value public time getnulltime return this nulltime returns the value when a sql null is encountered as the result of invoking a gettimestamp method the value public timestamp getnulltimestamp return this nulltimestamp returns the value when a sql null is encountered as the result of invoking a geturl method the value public url getnullurl return this nullurl intercepts calls to get methods and calls the appropriate getnull method if the resultset returned null java lang reflect invocationhandler invoke java lang object java lang reflect method java lang object proxy not used all method calls go to the internal result set method the method to invoke on the result set args the arguments to pass to the result set null checked result throwable error public object invoke object proxy method method object args throws throwable object result method invoke this rs args method nullmethod method nullmethods get method getname check nullmethod null first so that we dont call wasnull before a true getter method was invoked on the resultset return nullmethod null this rs wasnull nullmethod invoke this object null result sets the value to return when a sql null is encountered as the result of invoking a getasciistream method nullasciistream the value public void setnullasciistream inputstream nullasciistream this nullasciistream nullasciistream sets the value to return when a sql null is encountered as the result of invoking a getbigdecimal method nullbigdecimal the value public void setnullbigdecimal bigdecimal nullbigdecimal this nullbigdecimal nullbigdecimal sets the value to return when a sql null is encountered as the result of invoking a getbinarystream method nullbinarystream the value public void setnullbinarystream inputstream nullbinarystream this nullbinarystream nullbinarystream sets the value to return when a sql null is encountered as the result of invoking a getblob method nullblob the value public void setnullblob blob nullblob this nullblob nullblob sets the value to return when a sql null is encountered as the result of invoking a getboolean method nullboolean the value public void setnullboolean boolean nullboolean this nullboolean nullboolean sets the value to return when a sql null is encountered as the result of invoking a getbyte method nullbyte the value public void setnullbyte byte nullbyte this nullbyte nullbyte sets the value to return when a sql null is encountered as the result of invoking a getbytes method nullbytes the value public void setnullbytes byte nullbytes byte copy new byte nullbytes length system arraycopy nullbytes copy nullbytes length this nullbytes copy sets the value to return when a sql null is encountered as the result of invoking a getcharacterstream method nullcharacterstream the value public void setnullcharacterstream reader nullcharacterstream this nullcharacterstream nullcharacterstream sets the value to return when a sql null is encountered as the result of invoking a getclob method nullclob the value public void setnullclob clob nullclob this nullclob nullclob sets the value to return when a sql null is encountered as the result of invoking a getdate method nulldate the value public void setnulldate date nulldate this nulldate nulldate sets the value to return when a sql null is encountered as the result of invoking a getdouble method nulldouble the value public void setnulldouble double nulldouble this nulldouble nulldouble sets the value to return when a sql null is encountered as the result of invoking a getfloat method nullfloat the value public void setnullfloat float nullfloat this nullfloat nullfloat sets the value to return when a sql null is encountered as the result of invoking a getint method nullint the value public void setnullint int nullint this nullint nullint sets the value to return when a sql null is encountered as the result of invoking a getlong method nulllong the value public void setnulllong long nulllong this nulllong nulllong sets the value to return when a sql null is encountered as the result of invoking a getobject method nullobject the value public void setnullobject object nullobject this nullobject nullobject sets the value to return when a sql null is encountered as the result of invoking a getref method nullref the value public void setnullref ref nullref this nullref nullref sets the value to return when a sql null is encountered as the result of invoking a getshort method nullshort the value public void setnullshort short nullshort this nullshort nullshort sets the value to return when a sql null is encountered as the result of invoking a getstring method nullstring the value public void setnullstring string nullstring this nullstring nullstring sets the value to return when a sql null is encountered as the result of invoking a gettime method nulltime the value public void setnulltime time nulltime this nulltime nulltime sets the value to return when a sql null is encountered as the result of invoking a gettimestamp method nulltimestamp the value public void setnulltimestamp timestamp nulltimestamp this nulltimestamp nulltimestamp sets the value to return when a sql null is encountered as the result of invoking a geturl method nullurl the value public void setnullurl url nullurl this nullurl nullurl
licensed to the apache software foundation asf under one or more contributor license agreements see the notice file distributed with this work for additional information regarding copyright ownership the asf licenses this file to you under the apache license version the license you may not use this file except in compliance with the license you may obtain a copy of the license at http www apache org licenses license unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license package org apache commons dbutils wrappers import java lang reflect invocationhandler import java lang reflect method import java sql resultset import org apache commons dbutils proxyfactory wraps a resultset to trim strings returned by the getstring and getobject methods usage example this example shows how to decorate resultsets so processing continues as normal but all strings are trimmed before being returned from the resultset resultset rs somehow get a resultset substitute wrapped resultset with additional behavior for real resultset rs stringtrimmedresultset wrap rs pass wrapped resultset to processor list list new basicrowprocessor tobeanlist rs public class stringtrimmedresultset implements invocationhandler the factory to create proxies with private static final proxyfactory factory proxyfactory instance wraps the resultset in an instance of this class this is equivalent to proxyfactory instance createresultset new stringtrimmedresultset rs rs the resultset to wrap wrapped resultset public static resultset wrap resultset rs return factory createresultset new stringtrimmedresultset rs the wrapped result private final resultset rs constructs a new instance of stringtrimmedresultset to wrap the specified resultset rs resultset to wrap public stringtrimmedresultset resultset rs super this rs rs intercept calls to the getstring and getobject methods and trim any strings before theyre returned java lang reflect invocationhandler invoke java lang object java lang reflect method java lang object proxy not used all method calls go to the internal result set method the method to invoke on the result set args the arguments to pass to the result set string trimmed result throwable error public object invoke object proxy method method object args throws throwable object result method invoke this rs args if method getname equals getobject method getname equals getstring if result instanceof string result string result trim return result
